name: Check Terraform Modules
on:
  workflow_call:
    inputs:
      working_directory:
        description: The working directory where Terraform modules will be recursively found and checked.
        type: string
        required: false
        default: ./
      terraform_version:
        description: The version of Terraform that will be used. Can be an exact version or a range.
        type: string
        required: false
        default: '1.2'
      terraform_hostname:
        description: The Terraform Cloud hostname.
        type: string
        required: false
        default: app.terraform.io
      tflint_version:
        description: The version of TFLint that will be used.
        type: string
        required: false
        # TODO: Set to latest after 0.39.0 bug resolution https://github.com/terraform-linters/tflint/issues/1450
        default: v0.38.1
      tflint_config_version:
        description: The version of TFLint config from https://github.com/takescoop/tflint-config that will be used.
        type: string
        required: false
        default: v1
    secrets:
      terraform_token:
        description: The Terraform Cloud token that will be used to download private modules and providers. Should have read-only access.
        required: false
jobs:
  find-modules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: get-module-directories
        uses: bendrucker/find-terraform-modules@v1
        with:
          working-directory: ${{ inputs.working_directory }}
    outputs:
      matrix: ${{ steps.get-module-directories.outputs.modules }}
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
      - run: terraform fmt -check -diff -recursive
        working-directory: ${{ inputs.working_directory }}
  validate:
    runs-on: ubuntu-latest
    needs: find-modules
    strategy:
      matrix:
        module: ${{ fromJson(needs.find-modules.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          cli_config_credentials_hostname: ${{ inputs.terraform_hostname }}
          cli_config_credentials_token: ${{ secrets.terraform_token }}
      - run: terraform init -backend=false
      - uses: bendrucker/terraform-configuration-aliases-action@v1
        with:
          path: ${{ matrix.module }}
      - run: terraform validate
  lint:
    runs-on: ubuntu-latest
    needs: find-modules
    strategy:
      matrix:
        module: ${{ fromJson(needs.find-modules.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - uses: actions/checkout@v4
      - uses: terraform-linters/tflint-load-config-action@v1
        with:
          source-repo: TakeScoop/tflint-config
          source-ref: v1
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          tflint_version: ${{ inputs.tflint_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: tflint --format compact
